<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
	
	<!-- 암호화 객체 -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

	<bean id="customAccessDeniedHandler" class="com.company.handler.CustomAccessDeniedHandler">	</bean>
	<bean id="customLoginSuccessHandler" class="com.company.handler.CustomLoginSuccessHandler"></bean>
	<security:http>
		<!-- 접근권한이 없는 uri 에 접근시 움직이는 경로 설정 -->
		<!-- <security:access-denied-handler error-page="/access-denied" /> -->
		<security:access-denied-handler ref="customAccessDeniedHandler" />
	
		
	<!--  default 로그인, 로그아웃 페이지 보여짐 -->
		<!-- <security:form-login/> -->
		<!--  개발자가 원하는 로그인 페이지 보여짐 
			login-page="/login" : custom login page 보여주기
			authentication-failure-url="/login-error" : 로그인 실패시 
			uthentication-success-handler-ref : 로그인 성공시
		-->
		<security:form-login login-page="/login"  authentication-failure-url="/login-error"
				authentication-success-handler-ref="customLoginSuccessHandler"/>
		<!-- 로그아웃 설정 : default 로그아웃-->
		<!-- <security:logout/> -->
		
		<!-- 로그아웃 설정 : 컨트롤러로 보내서 개발자가 원하는 작업 수행 해주는 로그아웃 방법 -->
		<security:logout logout-url="/logout" invalidate-session="true" delete-cookies="true" logout-success-url="/"/> 
		
		
		<!-- url 접근 시 원하는 권한이 있는지 확인 -->
		<security:intercept-url pattern="/user-page" access="hasRole('ROLE_USER')"/>  <!-- access : 권한이 있는지 확인 -->
		<security:intercept-url pattern="/admin-page" access="hasRole('ROLE_ADMIN')"/>  <!-- access : 권한이 있는지 확인 -->
		
		
	</security:http>

	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user1" password="{noop}user1" authorities="ROLE_USER"/> <!-- noop 보안을 잠깐 안하것다  -->
				<security:user name="admin" password="{noop}admin" authorities="ROLE_ADMIN,ROLE_USER"/>
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
