<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<bean id="userDetail" class="com.company.service.CustomUserDetailsService"></bean>
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	<bean id="customLoginSuccessHandler" class="com.company.handler.CustomLoginSuccessHandler"></bean>
	
	
	
	<!--==================== 무조건 해야하는 작업 =========================-->
	<security:http>
		<!-- 특정한 URI 접근 시 인터셉터를 활용해 접근 제한하기  or 컨트롤러를 건드려서 하는방법이 있다.-->
		<!-- <security:intercept-url pattern="/member" access="hasRole('ROLE_MEMBER')"/>
		<security:intercept-url pattern="/admin" access="hasRole('ROLE_ADMIN')"/> -->
	
		<!-- 403에러 처리  -->
		<security:access-denied-handler error-page="/accessError"/>	
	
		<!-- 경로가 들어오면 Controller를 거친다!  -->
		<security:form-login login-page="/customLogin" authentication-success-handler-ref="customLoginSuccessHandler"/>
		<security:logout invalidate-session="true" delete-cookies="remember-me, JSESSION_ID"
		logout-success-url="/" />
		<!-- logout-success-url이 없으면 login페이지로 자동 넘김 -->
	</security:http>
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="userDetail">
			<security:password-encoder ref="bCryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
<!--==================== 무조건 해야하는 작업 끝====================-->

</beans>
